name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install Black
      run: pip install black
    - name: Run Black
      run: black --check .

  test:
    runs-on: ubuntu-latest
    needs: lint # Tests run only if linting passes
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test] # Assumes pyproject.toml with a [test] extra
    - name: Test with pytest
      run: pytest

  coverage:
    name: Generate and Upload Coverage
    runs-on: ubuntu-latest
    needs: test # Runs only if all test matrix jobs pass
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Important for Codecov
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Primary version for coverage
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
    - name: Run tests and generate coverage report
      run: pytest --cov --cov-branch --cov-report=xml
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
